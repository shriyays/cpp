#include<iostream>
using namespace std;

int main()
{
    cout<<"No Bitches?\n";
    return 0;
}

/*

NAMESPACE :

Namespaces provide the space where we can define or declare identifiers i.e. names of variables, methods, classes, etc.

A namespace is a declarative region that provides a scope to the identifiers (names of functions, variables or other user-defined data types)
inside it.

Namespace declarations appear only at global scope.

Namespace declarations can be nested within another namespace.

Namespace declarations donâ€™t have access specifiers (Public or Private).

No need to give a semicolon after the closing brace of the definition of namespace.

We can split the definition of namespace over several units.

DEFINITION:
namespace  namespace_name{
     // code declarations i.e. variable  (int a;)
     method (void add();)
     classes ( class student{};)
}

CALL : namespace_name: :code;  // code could be a variable, function or class.

*/